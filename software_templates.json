[
  {
    "id": "python_function_generator",
    "title": "Python Function Generator",
    "description": "Generate Python functions with proper documentation and error handling",
    "category": "Software Development",
    "author": "Prompt Forge",
    "version": "1.0.0",
    "tags": ["python", "function", "coding", "development"],
    "createdAt": "2024-01-15T10:00:00Z",
    "updatedAt": "2024-01-15T10:00:00Z",
    "templateContent": "Generate a Python function with the following specifications:\n\nFunction Name: {{function_name}}\nPurpose: {{function_purpose}}\nInput Parameters: {{input_parameters}}\nReturn Type: {{return_type}}\nProgramming Style: {{programming_style}}\n\nRequirements:\n- Include proper type hints\n- Add comprehensive docstring\n- Implement error handling for {{error_cases}}\n- Follow PEP 8 style guidelines\n- Include example usage\n{{#if additional_requirements}}\nAdditional Requirements:\n{{additional_requirements}}\n{{/if}}\n\nPlease provide:\n1. The complete function implementation\n2. Example usage with test cases\n3. Brief explanation of the approach used",
    "fields": [
      {
        "id": "function_name",
        "label": "Function Name",
        "placeholder": "e.g., calculate_factorial",
        "type": "text",
        "isRequired": true,
        "helpText": "Choose a descriptive name following Python naming conventions"
      },
      {
        "id": "function_purpose",
        "label": "Function Purpose",
        "placeholder": "e.g., Calculate the factorial of a number using recursion",
        "type": "textarea",
        "isRequired": true,
        "helpText": "Describe what the function should do"
      },
      {
        "id": "input_parameters",
        "label": "Input Parameters",
        "placeholder": "e.g., n: int (the number to calculate factorial for)",
        "type": "textarea",
        "isRequired": true,
        "helpText": "List all input parameters with their types"
      },
      {
        "id": "return_type",
        "label": "Return Type",
        "type": "dropdown",
        "options": ["int", "float", "str", "bool", "list", "dict", "tuple", "None", "custom"],
        "defaultValue": "int",
        "isRequired": true
      },
      {
        "id": "programming_style",
        "label": "Programming Style",
        "type": "dropdown",
        "options": ["Recursive", "Iterative", "Functional", "Object-Oriented"],
        "defaultValue": "Iterative",
        "isRequired": true
      },
      {
        "id": "error_cases",
        "label": "Error Cases to Handle",
        "placeholder": "e.g., negative numbers, non-integer inputs, overflow",
        "type": "textarea",
        "helpText": "What edge cases and errors should be handled?"
      },
      {
        "id": "additional_requirements",
        "label": "Additional Requirements",
        "placeholder": "Any specific requirements or constraints...",
        "type": "textarea",
        "helpText": "Performance requirements, libraries to use, etc."
      }
    ]
  },
  {
    "id": "api_endpoint_generator",
    "title": "REST API Endpoint Generator",
    "description": "Create REST API endpoints with authentication and proper error handling",
    "category": "Software Development",
    "author": "Prompt Forge",
    "version": "1.0.0",
    "tags": ["api", "rest", "nodejs", "backend", "jwt"],
    "createdAt": "2024-01-15T10:00:00Z",
    "updatedAt": "2024-01-15T10:00:00Z",
    "templateContent": "Create a REST API endpoint with the following specifications:\n\nFramework: {{framework}}\nEndpoint Path: {{endpoint_path}}\nHTTP Method: {{http_method}}\nPurpose: {{endpoint_purpose}}\nAuthentication: {{auth_type}}\nDatabase: {{database_type}}\n\nRequest Body:\n{{request_body}}\n\nResponse Format:\n{{response_format}}\n\nValidation Rules:\n{{validation_rules}}\n\nError Handling:\n{{error_handling}}\n\nPlease provide:\n1. Complete endpoint implementation\n2. Middleware for authentication\n3. Input validation\n4. Error handling with proper HTTP status codes\n5. API documentation example\n6. Example request/response\n\n{{#if additional_features}}\nAdditional Features:\n{{additional_features}}\n{{/if}}",
    "fields": [
      {
        "id": "framework",
        "label": "Framework",
        "type": "dropdown",
        "options": ["Express.js", "Fastify", "Koa.js", "NestJS", "Django", "Flask", "FastAPI"],
        "defaultValue": "Express.js",
        "isRequired": true
      },
      {
        "id": "endpoint_path",
        "label": "Endpoint Path",
        "placeholder": "e.g., /api/v1/auth/login",
        "type": "text",
        "isRequired": true
      },
      {
        "id": "http_method",
        "label": "HTTP Method",
        "type": "dropdown",
        "options": ["GET", "POST", "PUT", "PATCH", "DELETE"],
        "defaultValue": "POST",
        "isRequired": true
      },
      {
        "id": "endpoint_purpose",
        "label": "Endpoint Purpose",
        "placeholder": "e.g., User authentication with JWT token generation",
        "type": "textarea",
        "isRequired": true
      },
      {
        "id": "auth_type",
        "label": "Authentication Type",
        "type": "dropdown",
        "options": ["JWT", "Session-based", "API Key", "OAuth 2.0", "None"],
        "defaultValue": "JWT",
        "isRequired": true
      },
      {
        "id": "database_type",
        "label": "Database",
        "type": "dropdown",
        "options": ["MongoDB", "PostgreSQL", "MySQL", "SQLite", "Redis", "None"],
        "defaultValue": "MongoDB",
        "isRequired": true
      },
      {
        "id": "request_body",
        "label": "Request Body Structure",
        "placeholder": "e.g., { email: string, password: string }",
        "type": "textarea",
        "isRequired": true
      },
      {
        "id": "response_format",
        "label": "Response Format",
        "placeholder": "e.g., { success: boolean, token: string, user: object }",
        "type": "textarea",
        "isRequired": true
      },
      {
        "id": "validation_rules",
        "label": "Validation Rules",
        "placeholder": "e.g., email must be valid format, password min 8 characters",
        "type": "textarea",
        "helpText": "Define input validation requirements"
      },
      {
        "id": "error_handling",
        "label": "Error Handling",
        "placeholder": "e.g., Invalid credentials (401), User not found (404), Server error (500)",
        "type": "textarea",
        "helpText": "Define error scenarios and responses"
      },
      {
        "id": "additional_features",
        "label": "Additional Features",
        "placeholder": "e.g., Rate limiting, logging, caching",
        "type": "textarea",
        "helpText": "Any additional features to implement"
      }
    ]
  },
  {
    "id": "react_component_generator",
    "title": "React Component Generator",
    "description": "Create React components with TypeScript and modern best practices",
    "category": "Software Development",
    "author": "Prompt Forge",
    "version": "1.0.0",
    "tags": ["react", "typescript", "component", "frontend"],
    "createdAt": "2024-01-15T10:00:00Z",
    "updatedAt": "2024-01-15T10:00:00Z",
    "templateContent": "Create a React component with the following specifications:\n\nComponent Name: {{component_name}}\nComponent Type: {{component_type}}\nPurpose: {{component_purpose}}\nStyling: {{styling_approach}}\nState Management: {{state_management}}\nProps Interface: {{props_interface}}\n\nFeatures to implement:\n{{component_features}}\n\nAccessibility Requirements:\n{{accessibility_requirements}}\n\nResponsive Behavior:\n{{responsive_behavior}}\n\nPlease provide:\n1. Complete TypeScript component implementation\n2. Props interface definition\n3. Styling ({{styling_approach}})\n4. Usage example\n5. Tests (if requested)\n6. Documentation comments\n\n{{#if additional_hooks}}\nCustom Hooks Needed:\n{{additional_hooks}}\n{{/if}}\n\n{{#if integration_requirements}}\nIntegration Requirements:\n{{integration_requirements}}\n{{/if}}",
    "fields": [
      {
        "id": "component_name",
        "label": "Component Name",
        "placeholder": "e.g., LoginForm",
        "type": "text",
        "isRequired": true,
        "helpText": "Use PascalCase for component names"
      },
      {
        "id": "component_type",
        "label": "Component Type",
        "type": "dropdown",
        "options": ["Functional Component", "Class Component", "Custom Hook"],
        "defaultValue": "Functional Component",
        "isRequired": true
      },
      {
        "id": "component_purpose",
        "label": "Component Purpose",
        "placeholder": "e.g., A login form with email/password validation",
        "type": "textarea",
        "isRequired": true
      },
      {
        "id": "styling_approach",
        "label": "Styling Approach",
        "type": "dropdown",
        "options": ["Tailwind CSS", "CSS Modules", "Styled Components", "Emotion", "SCSS", "CSS-in-JS"],
        "defaultValue": "Tailwind CSS",
        "isRequired": true
      },
      {
        "id": "state_management",
        "label": "State Management",
        "type": "dropdown",
        "options": ["useState", "useReducer", "Context API", "Redux", "Zustand", "None"],
        "defaultValue": "useState",
        "isRequired": true
      },
      {
        "id": "props_interface",
        "label": "Props Interface",
        "placeholder": "e.g., { onSubmit: (data: LoginData) => void, isLoading?: boolean }",
        "type": "textarea",
        "isRequired": true,
        "helpText": "Define the TypeScript interface for component props"
      },
      {
        "id": "component_features",
        "label": "Features to Implement",
        "placeholder": "e.g., Form validation, Loading states, Error handling, Submit functionality",
        "type": "textarea",
        "isRequired": true
      },
      {
        "id": "accessibility_requirements",
        "label": "Accessibility Requirements",
        "placeholder": "e.g., ARIA labels, keyboard navigation, screen reader support",
        "type": "textarea",
        "helpText": "Accessibility features to implement"
      },
      {
        "id": "responsive_behavior",
        "label": "Responsive Behavior",
        "placeholder": "e.g., Mobile-first design, tablet layout adjustments",
        "type": "textarea",
        "helpText": "How should the component adapt to different screen sizes?"
      },
      {
        "id": "additional_hooks",
        "label": "Additional Hooks",
        "placeholder": "e.g., useForm, useApi, useLocalStorage",
        "type": "textarea",
        "helpText": "Any custom hooks that should be created or used"
      },
      {
        "id": "integration_requirements",
        "label": "Integration Requirements",
        "placeholder": "e.g., API endpoints, external libraries, parent component communication",
        "type": "textarea",
        "helpText": "External integrations needed"
      }
    ]
  },
  {
    "id": "bug_fix_analyzer",
    "title": "Bug Fix Analyzer",
    "description": "Analyze and fix bugs in code with detailed explanations",
    "category": "Software Development",
    "author": "Prompt Forge",
    "version": "1.0.0",
    "tags": ["debugging", "code-review", "troubleshooting"],
    "createdAt": "2024-01-15T10:00:00Z",
    "updatedAt": "2024-01-15T10:00:00Z",
    "templateContent": "Please analyze and fix the bug in this code:\n\nProgramming Language: {{programming_language}}\nCode Context: {{code_context}}\nExpected Behavior: {{expected_behavior}}\nActual Behavior: {{actual_behavior}}\nError Message (if any): {{error_message}}\n\nCode to analyze:\n```{{programming_language}}\n{{buggy_code}}\n```\n\n{{#if additional_context}}\nAdditional Context:\n{{additional_context}}\n{{/if}}\n\nPlease provide:\n1. **Root Cause Analysis**: Identify what's causing the bug\n2. **Fixed Code**: Corrected version with explanations\n3. **Explanation**: Why the original code failed and how the fix works\n4. **Prevention**: How to avoid similar bugs in the future\n5. **Testing**: Suggested test cases to verify the fix\n\n{{#if performance_considerations}}\nPerformance Considerations: {{performance_considerations}}\n{{/if}}",
    "fields": [
      {
        "id": "programming_language",
        "label": "Programming Language",
        "type": "dropdown",
        "options": ["Python", "JavaScript", "TypeScript", "Java", "C++", "C#", "Go", "Rust", "PHP", "Ruby"],
        "defaultValue": "Python",
        "isRequired": true
      },
      {
        "id": "code_context",
        "label": "Code Context",
        "placeholder": "e.g., This is a function in a web scraper that processes user data",
        "type": "textarea",
        "isRequired": true,
        "helpText": "Describe what this code is supposed to do and where it fits in your project"
      },
      {
        "id": "expected_behavior",
        "label": "Expected Behavior",
        "placeholder": "e.g., Function should return a list of valid email addresses",
        "type": "textarea",
        "isRequired": true
      },
      {
        "id": "actual_behavior",
        "label": "Actual Behavior",
        "placeholder": "e.g., Function crashes with IndexError when processing empty list",
        "type": "textarea",
        "isRequired": true
      },
      {
        "id": "error_message",
        "label": "Error Message",
        "placeholder": "Paste the complete error message here...",
        "type": "textarea",
        "helpText": "Include the full stack trace if available"
      },
      {
        "id": "buggy_code",
        "label": "Code to Fix",
        "placeholder": "Paste your buggy code here...",
        "type": "textarea",
        "isRequired": true,
        "helpText": "Include the problematic code snippet"
      },
      {
        "id": "additional_context",
        "label": "Additional Context",
        "placeholder": "e.g., This happens only with certain input types, works fine in development",
        "type": "textarea",
        "helpText": "Any additional information that might help identify the issue"
      },
      {
        "id": "performance_considerations",
        "label": "Performance Requirements",
        "placeholder": "e.g., This function processes 10k+ records, needs to be fast",
        "type": "textarea",
        "helpText": "Any performance constraints or requirements"
      }
    ]
  }
]