# Generated by Django 4.2.10 on 2025-09-08 08:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        (
            "templates",
            "0008_rename_chat_messag_session_597c4e_idx_template_ch_session_b195ab_idx_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="TemplateExtractionRule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("keyword", "Keyword Based"),
                            ("pattern", "Pattern Matching"),
                            ("langchain", "LangChain Analysis"),
                            ("ml_model", "ML Model"),
                        ],
                        max_length=20,
                    ),
                ),
                ("rule_config", models.JSONField(default=dict)),
                (
                    "minimum_confidence",
                    models.FloatField(
                        default=0.7,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                (
                    "auto_approve_threshold",
                    models.FloatField(
                        default=0.9,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("priority", models.PositiveIntegerField(default=10)),
                ("total_extractions", models.PositiveIntegerField(default=0)),
                ("successful_extractions", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "template_extraction_rules",
                "ordering": ["priority", "name"],
            },
        ),
        migrations.CreateModel(
            name="UserTemplatePreference",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("auto_extract_enabled", models.BooleanField(default=True)),
                ("auto_approve_high_confidence", models.BooleanField(default=False)),
                ("notification_on_extraction", models.BooleanField(default=True)),
                ("preferred_categories", models.JSONField(blank=True, default=list)),
                ("excluded_categories", models.JSONField(blank=True, default=list)),
                (
                    "minimum_quality_threshold",
                    models.CharField(
                        choices=[
                            ("high", "High Quality"),
                            ("medium", "Medium Quality"),
                            ("low", "Low Quality"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("contribute_to_public_library", models.BooleanField(default=True)),
                ("allow_template_sharing", models.BooleanField(default=True)),
                ("premium_template_access", models.BooleanField(default=False)),
                ("templates_contributed", models.PositiveIntegerField(default=0)),
                ("templates_monetized", models.PositiveIntegerField(default=0)),
                (
                    "total_earnings",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="template_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_template_preferences",
            },
        ),
        migrations.CreateModel(
            name="ChatSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200)),
                ("ai_model", models.CharField(default="deepseek-chat", max_length=50)),
                ("model_provider", models.CharField(default="deepseek", max_length=50)),
                ("session_metadata", models.JSONField(blank=True, default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("total_messages", models.PositiveIntegerField(default=0)),
                ("total_tokens_used", models.PositiveIntegerField(default=0)),
                (
                    "total_cost",
                    models.DecimalField(decimal_places=6, default=0, max_digits=10),
                ),
                ("extracted_templates_count", models.PositiveIntegerField(default=0)),
                ("templates_approved", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "chat_sessions",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("user", "User"),
                            ("assistant", "Assistant"),
                            ("system", "System"),
                        ],
                        max_length=20,
                    ),
                ),
                ("content", models.TextField()),
                ("original_content", models.TextField(blank=True)),
                ("model_used", models.CharField(blank=True, max_length=50)),
                ("tokens_used", models.PositiveIntegerField(default=0)),
                ("response_time_ms", models.PositiveIntegerField(default=0)),
                (
                    "estimated_cost",
                    models.DecimalField(decimal_places=6, default=0, max_digits=10),
                ),
                ("contains_templates", models.BooleanField(default=False)),
                ("templates_extracted", models.BooleanField(default=False)),
                ("extraction_processed", models.BooleanField(default=False)),
                ("langchain_analyzed", models.BooleanField(default=False)),
                (
                    "analysis_score",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                (
                    "template_quality_score",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                ("message_metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="chat.chatsession",
                    ),
                ),
            ],
            options={
                "db_table": "chat_messages",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="TemplateMonetization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "earning_type",
                    models.CharField(
                        choices=[
                            ("usage_fee", "Usage Fee"),
                            ("premium_access", "Premium Access"),
                            ("contribution_bonus", "Contribution Bonus"),
                            ("quality_bonus", "Quality Bonus"),
                        ],
                        max_length=20,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("description", models.CharField(max_length=200)),
                ("usage_context", models.JSONField(blank=True, default=dict)),
                ("is_paid", models.BooleanField(default=False)),
                ("paid_at", models.DateTimeField(blank=True, null=True)),
                ("payment_reference", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "contributor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="template_earnings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="monetization_records",
                        to="templates.template",
                    ),
                ),
                (
                    "used_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="template_purchases",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "template_monetization",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["contributor", "created_at"],
                        name="template_mo_contrib_02369e_idx",
                    ),
                    models.Index(
                        fields=["template", "earning_type"],
                        name="template_mo_templat_626c8a_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ExtractedTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("template_content", models.TextField()),
                ("category_suggestion", models.CharField(blank=True, max_length=100)),
                (
                    "extraction_method",
                    models.CharField(default="langchain", max_length=50),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ]
                    ),
                ),
                (
                    "quality_rating",
                    models.CharField(
                        choices=[
                            ("high", "High Quality"),
                            ("medium", "Medium Quality"),
                            ("low", "Low Quality"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("langchain_analysis", models.JSONField(blank=True, default=dict)),
                ("keywords_extracted", models.JSONField(blank=True, default=list)),
                ("use_cases", models.JSONField(blank=True, default=list)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("needs_revision", "Needs Revision"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("auto_approved", models.BooleanField(default=False)),
                ("review_notes", models.TextField(blank=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "published_template",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="source_extraction",
                        to="templates.template",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_extractions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "source_message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="extracted_templates",
                        to="chat.chatmessage",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="extracted_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "extracted_templates",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "status"], name="extracted_t_user_id_ab3e11_idx"
                    ),
                    models.Index(
                        fields=["status", "created_at"],
                        name="extracted_t_status_b69e7b_idx",
                    ),
                    models.Index(
                        fields=["confidence_score", "quality_rating"],
                        name="extracted_t_confide_c22304_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["session", "created_at"], name="chat_messag_session_597c4e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["role", "created_at"], name="chat_messag_role_b6a95d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["contains_templates", "templates_extracted"],
                name="chat_messag_contain_178b2e_idx",
            ),
        ),
    ]
